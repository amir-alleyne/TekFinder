# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env: # Define environment variables here
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD:  ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST:  ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT:  ${{ secrets.POSTGRES_PORT }}
      POSTGRES_DB:  ${{ secrets.POSTGRES_DB }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Echo environment variable
      run: |
        echo "POSTGRES_PORT is set to: ${POSTGRES_PORT}*****"
    
    - name: Start server
      run: |
        nohup python main.py &
        sleep 10  # Wait for the server to start
        
    - name: Test with pytest
      run: |
        pytest
